name: Binaries

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]
  push:

jobs:
  test:
    name: Test
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        example:
          - examples/ssh-proxy.yml
          - examples/standalone.yml
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Install Vagrant and VirtualBox
        run: |
          brew install --cask virtualbox
          brew install --cask vagrant

      - name: Show VirtualBox version
        run: vboxmanage --version

      - name: Show Vagrant version
        run: vagrant --version

      - name: Generate SSH keypair for Vagrant
        run: ssh-keygen -t ed25519 -f $HOME/.ssh/id_ed25519 -q -N ""

      - name: Bring up VMs
        run: make vagrant-up

      - name: Set up Go compiler
        uses: actions/setup-go@v3
        with:
          check-latest: true

      - name: Download dependencies
        run: go mod download

      - name: Run k3se up
        run: go run main.go up ${{ matrix.example }}

      - name: Test k3s
        working-directory: deploy/vagrant
        run: |
          vagrant ssh kube1 -c "k3s version"
          vagrant ssh kube1 -c "k3s kubectl get nodes"
          vagrant ssh kube1 -c "k3s kubectl get nodes"

      - name: Run k3se down
        run: go run main.go down ${{ matrix.example }}

  build:
    name: Build
    # pull_request_target: Only "dependabot[bot]" is allowed to access secrets.
    # pull_request: All other forks are running without access to secrets.
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
      (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')
    needs: [test]
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - linux/arm
          - darwin/amd64
          - darwin/arm64
          - windows/amd64
    steps:
      - name: Check out
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: actions/checkout@v3

        # Allow "dependabot[bot]" to verify its changes with access to secrets and modified code.
      - name: Checkout for Dependabot
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Go compiler
        uses: actions/setup-go@v3
        with:
          check-latest: true

      - name: Fetch version from git history
        if: github.ref_protected == true
        uses: docker://ghcr.io/codfish/semantic-release-action:v1
        id: semantic
        with:
          dry_run: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build binary
        if: github.ref_protected == true
        run: VERSION=v${{ steps.semantic.outputs.release-version }} UPX=-9 PLATFORM=${{ matrix.platform }} make build

      - name: Build binary
        if: github.ref_protected == false
        run: UPX=-9 PLATFORM=${{ matrix.platform }} make build

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: bin/*

  auto-merge:
    name: Auto-merge
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    needs: [build]
    steps:
      - uses: ahmadnassri/action-dependabot-auto-merge@v2
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  release:
    name: Release
    if: github.ref_protected == true && github.event_name == 'push'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Download release artifacts
        uses: actions/download-artifact@v3
        with:
          name: binaries
          path: release

      - name: Create release
        uses: docker://ghcr.io/codfish/semantic-release-action:v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
